#!/usr/bin/env bash

$QUIET || echo -e "=========\nosdetection"

OS_UNAME="$(uname -r)"

$QUIET || echo -e "input:\n - OSTYPE=${OSTYPE}\n - OS_UNAME=${OS_UNAME}"

OS_SHORT="unknown"
OS_SUBSYSTEM="unknown"
OS__DOTFILE_SUPPORT=1

if [[ "$OSTYPE" == "linux-gnu" ]]; then
    OS_SHORT="linux"
    OS_SUBSYSTEM="linux"

    # detect linux that is deployed via WSL (Windows Subsystem for Linux)
    if [[ "$(uname -r)" =~ "Microsoft" ]]; then
        OS_SUBSYSTEM="wsl";
    fi

elif [[ "$OSTYPE" == "darwin"* ]]; then
    OS_SHORT="macos"
    OS_SUBSYSTEM="macos"
elif [[ "$OSTYPE" == "cygwin" ]]; then
    # POSIX compatibility layer and Linux environment emulation for Windows
    OS_SHORT="linux"
    OS_SUBSYSTEM="cygwin"
    OS__DOTFILE_SUPPORT=0
elif [[ "$OSTYPE" == "msys" ]]; then
    # Lightweight shell and GNU utilities compiled for Windows (part of MinGW)
    echo "not yet implemented"
elif [[ "$OSTYPE" == "win32" ]]; then
    OS_SUBSYSTEM=OS_SHORT="win32"
    OS_SUBSYSTEM="win32"
elif [[ "$(uname -r)" =~ "MSYS_NT-10" ]]; then
    OS_SUBSYSTEM=OS_SHORT="win10"
    OS_SUBSYSTEM="win10"
else
    OS_SHORT="unknown"
    OS_SUBSYSTEM="unknown"
fi

if [[ "$OS_SHORT" == "linux" ]]; then
    OS_BASE="unix"
elif [[ "$OS_SHORT" == "macos" ]]; then
    OS_BASE="unix"
elif [[ "$OS_SHORT" =~ "win" ]]; then
    OS_BASE="win"
    OS__DOTFILE_SUPPORT=0
else
    echo "Could not detect OS_BASE from OS_SHORT='$OS_SHORT'. Setting OS_BASE to value 'unknown'"
    OS_BASE="unknown"
    OS__DOTFILE_SUPPORT=0
    exit 1
fi

$QUIET || echo "detected:"
$QUIET || echo " - OS_BASE=${OS_BASE}"
$QUIET || echo " - OS_SHORT=${OS_SHORT}"
$QUIET || echo " - OS_SUBSYSTEM=${OS_SUBSYSTEM}"
$QUIET || echo " - OS__DOTFILE_SUPPORT=${OS__DOTFILE_SUPPORT}"

if [[ "$OS__DOTFILE_SUPPORT" == "0" ]]; then
    echo "OS or setup currently not detectable or supported, feel free to add support yourself"
    exit 1
fi
